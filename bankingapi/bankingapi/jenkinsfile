pipeline{
agent any
tools {
    jdk 'java21'       // match names in Manage Jenkins → Tools
    maven 'maven'
  }
parameters {
    string(name: 'BRANCH', defaultValue: 'javaprojects', description: 'Git branch')
    string(name: 'MODULE_DIR', defaultValue: 'bankingapi/bankingapi', description: 'Path to module (use "." if at root)')
  }
environment {
    SONAR_HOST = 'https://sonarcloud.io'
    SONAR_ORG  = 'eswaribala'                 // <-- set your org
    SONAR_KEY  = 'eswaribala_siemenscorejavajul2025'   // <-- set your project key
    SONAR_TOKEN = '4b35fc42de8b5e935cca1714c777cb07b7bdd2d0'

  }

stages{
    stage('checkout'){
        steps {
        git branch: params.BRANCH, url: 'https://github.com/eswaribala/niitmsaug2025.git'
      }
    }
    stage('maven_build'){
       steps{
        dir(params.MODULE_DIR) {
          bat 'mvn -B -U clean install -DskipTests -Dmaven.test.skip=true'
        }
       }
     }

   stage('mock_test'){
     steps{
           dir(params.MODULE_DIR) {
             bat 'mvn -B -U test -Dtest=IndividualServiceTest'
           }
          }
      }

   stage('jacoco_report'){
        steps{
              dir(params.MODULE_DIR) {
                bat 'mvn -B -U surefire:test -Dtest=IndividualServiceTest'
              }
             }
             post {
              always {
                // find reports anywhere under workspace
                junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
              }
            }
      }

   stage('Sonar Analysis') {
         steps {
           withSonarQubeEnv('sonarqube') {  // Configure in Manage Jenkins → Configure System
             withCredentials([string(credentialsId: '024db136-7ddd-4bef-83d5-82af1bdc9f9a', variable: 'SONAR_TOKEN')]) {
               dir(params.MODULE_DIR) {
                 bat """
   mvn -B sonar:sonar -Dsonar.host.url=%SONAR_HOST% -Dsonar.organization=%SONAR_ORG% -Dsonar.projectKey=%SONAR_KEY% -Dsonar.login=%SONAR_TOKEN% -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
                 """.trim()
               }
             }
           }
         }

 }
}