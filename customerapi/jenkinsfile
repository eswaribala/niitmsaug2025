pipeline {
  agent any

  tools {
    jdk 'java21'       // match names in Manage Jenkins → Tools
    maven 'maven'
  }

  parameters {
    string(name: 'BRANCH', defaultValue: 'javaprojects', description: 'Git branch')
    string(name: 'MODULE_DIR', defaultValue: 'customerapi', description: 'Path to module (use "." if at root)')
  }

 /*  options {
    timestamps()
    ansiColor('xterm')
    buildDiscarder(logRotator(numToKeepStr: '25'))
  } */

  environment {
    SONAR_HOST = 'https://sonarcloud.io'
    SONAR_ORG  = 'eswaribala'                 // <-- set your org
    SONAR_KEY  = 'eswaribala_niitmsaug2025'   // <-- set your project key
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: params.BRANCH, url: 'https://github.com/eswaribala/niitmsaug2025.git'
      }
    }

    stage('Build & Test') {
      steps {
        dir(params.MODULE_DIR) {
          bat 'mvn -B -U clean verify'
        }
      }
      post {
        always {
          // find reports anywhere under workspace
          junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
        }
      }
    }

    stage('Sonar Analysis') {
      steps {
        withSonarQubeEnv('sonarcloud') {  // Configure in Manage Jenkins → Configure System
          withCredentials([string(credentialsId: 'sonar-token-id', variable: 'SONAR_TOKEN')]) {
            dir(params.MODULE_DIR) {
              bat """
mvn -B sonar:sonar -Dsonar.host.url=%SONAR_HOST% -Dsonar.organization=%SONAR_ORG% -Dsonar.projectKey=%SONAR_KEY% -Dsonar.login=%SONAR_TOKEN% -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
              """.trim()
            }
          }
        }
      }
    }

    stage('Quality Gate') {
      steps {
        timeout(time: 15, unit: 'MINUTES') {
          script {
            def qg = waitForQualityGate()
            if (qg.status != 'OK') {
              error "Quality Gate failed: ${qg.status}"
            }
          }
        }
      }
    }

    stage('Package & Archive') {
      steps {
        dir(params.MODULE_DIR) {
          bat '  bat 'mvn -B -U clean install -DskipTests
        }
        archiveArtifacts artifacts: "${params.MODULE_DIR}/target/*.jar", fingerprint: true
      }
    }
  }

  post {
    success { echo '✅ Build + Tests + SonarCloud passed. Artifact archived.' }
    failure { echo '❌ Build failed or SonarCloud Quality Gate not met.' }
  }
}
